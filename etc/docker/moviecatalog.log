2020-06-13 19:15:21.232  INFO 27880 --- [restartedMain] k.moviecatalog.MovieCatalogApplication   : No active profile set, falling back to default profiles: default
2020-06-13 19:15:21.989  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-13 19:15:21.989  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-06-13 19:15:22.046  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.MovieRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-13 19:15:22.047  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.RoleRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-13 19:15:22.049  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.RuntimeConfigRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-13 19:15:22.051  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchCrudRepository.
2020-06-13 19:15:22.071  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 78ms. Found 1 Elasticsearch repository interfaces.
2020-06-13 19:15:22.350  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-13 19:15:22.352  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-06-13 19:15:22.368  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.MovieRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-13 19:15:22.369  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.RoleRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-13 19:15:22.369  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.RuntimeConfigRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-13 19:15:22.369  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-06-13 19:15:22.369  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-06-13 19:15:22.377  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-13 19:15:22.377  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-06-13 19:15:22.394  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.MovieElasticSearchRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-06-13 19:15:22.414  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 32ms. Found 4 JPA repository interfaces.
2020-06-13 19:15:22.427  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-13 19:15:22.428  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-13 19:15:22.448  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.MovieElasticSearchRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-13 19:15:22.448  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.MovieRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-13 19:15:22.449  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-13 19:15:22.449  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.RuntimeConfigRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-13 19:15:22.449  INFO 27880 --- [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface kostka.moviecatalog.repository.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-13 19:15:22.449  INFO 27880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020-06-13 19:15:22.808  INFO 27880 --- [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=abade4c7-3820-3229-9428-eb1d1ead58b3
2020-06-13 19:15:23.208  INFO 27880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-13 19:15:23.214  INFO 27880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-13 19:15:23.216  INFO 27880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-13 19:15:23.218  INFO 27880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-13 19:15:23.687  INFO 27880 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)
2020-06-13 19:15:23.695  INFO 27880 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-06-13 19:15:23.695  INFO 27880 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-06-13 19:15:23.839  INFO 27880 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-06-13 19:15:23.839  INFO 27880 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2577 ms
2020-06-13 19:15:24.307  INFO 27880 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-06-13 19:15:24.421  INFO 27880 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.12.Final
2020-06-13 19:15:24.644  INFO 27880 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-06-13 19:15:24.795  INFO 27880 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-06-13 19:15:25.404  INFO 27880 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-06-13 19:15:25.420  INFO 27880 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-06-13 19:15:26.407  INFO 27880 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-06-13 19:15:26.415  INFO 27880 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-06-13 19:15:26.468  WARN 27880 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2020-06-13 19:15:26.572  WARN 27880 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-06-13 19:15:27.413  WARN 27880 --- [I/O dispatcher 1] org.elasticsearch.client.RestClient      : request [PUT http://localhost:9200/movie/_mapping/esmovie?master_timeout=30s&include_type_name=true&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.3.0-de777fa "[types removal] Using include_type_name in put mapping requests is deprecated. The parameter will be removed in the next major version."]
2020-06-13 19:15:27.844  INFO 27880 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'clientInboundChannelExecutor'
2020-06-13 19:15:27.854  INFO 27880 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'clientOutboundChannelExecutor'
2020-06-13 19:15:27.880  INFO 27880 --- [restartedMain] k.m.configuration.AsyncConfiguration     : Creating Async Task Executor
2020-06-13 19:15:27.880  INFO 27880 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService
2020-06-13 19:15:27.881  INFO 27880 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'taskExecutor'
2020-06-13 19:15:27.893  INFO 27880 --- [restartedMain] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService 'messageBrokerTaskScheduler'
2020-06-13 19:15:27.935  INFO 27880 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'brokerChannelExecutor'
2020-06-13 19:15:28.141  INFO 27880 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e1260b5, org.springframework.security.web.context.SecurityContextPersistenceFilter@68ab3750, org.springframework.security.web.header.HeaderWriterFilter@41059a71, org.springframework.security.web.authentication.logout.LogoutFilter@1aad8057, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@63eaba48, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@55d0a25, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@13fc82b5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d155e93, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@300e75fc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44e04a62, org.springframework.security.web.session.SessionManagementFilter@2c2bfec6, org.springframework.security.web.access.ExceptionTranslationFilter@12ad4900, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@76846e99]
2020-06-13 19:15:28.171  WARN 27880 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-06-13 19:15:28.172  INFO 27880 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-13 19:15:28.175  WARN 27880 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-06-13 19:15:28.176  INFO 27880 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-13 19:15:32.630  WARN 27880 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-06-13 19:15:32.646  WARN 27880 --- [restartedMain] eactorLoadBalancerClientRibbonWarnLogger : You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-06-13 19:15:32.673  WARN 27880 --- [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-06-13 19:15:32.803  INFO 27880 --- [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2020-06-13 19:15:32.848  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2020-06-13 19:15:32.894  INFO 27880 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2020-06-13 19:15:32.895  INFO 27880 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2020-06-13 19:15:32.988  INFO 27880 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2020-06-13 19:15:32.988  INFO 27880 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2020-06-13 19:15:33.182  INFO 27880 --- [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2020-06-13 19:15:33.559  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2020-06-13 19:15:33.559  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2020-06-13 19:15:33.559  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2020-06-13 19:15:33.559  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2020-06-13 19:15:33.559  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2020-06-13 19:15:33.559  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2020-06-13 19:15:33.560  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2020-06-13 19:15:33.655  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2020-06-13 19:15:33.657  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2020-06-13 19:15:33.659  INFO 27880 --- [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-13 19:15:33.663  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1592068533662 with initial instances count: 1
2020-06-13 19:15:33.669  INFO 27880 --- [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application MOVIE-CATALOG with eureka with status UP
2020-06-13 19:15:33.669  INFO 27880 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1592068533669, current=UP, previous=STARTING]
2020-06-13 19:15:33.671  INFO 27880 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_MOVIE-CATALOG/host.docker.internal:movie-catalog:8081: registering service...
2020-06-13 19:15:33.671  INFO 27880 --- [restartedMain] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2020-06-13 19:15:33.672  INFO 27880 --- [restartedMain] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2020-06-13 19:15:33.672  INFO 27880 --- [restartedMain] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2020-06-13 19:15:33.673  INFO 27880 --- [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2020-06-13 19:15:33.701  INFO 27880 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_MOVIE-CATALOG/host.docker.internal:movie-catalog:8081 - registration status: 204
2020-06-13 19:15:33.728  INFO 27880 --- [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#7e7c1bb1:0/SimpleConnection@446f6fd7 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 56848]
2020-06-13 19:15:33.995  INFO 27880 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path ''
2020-06-13 19:15:33.997  INFO 27880 --- [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8081
2020-06-13 19:15:35.233  INFO 27880 --- [restartedMain] k.moviecatalog.MovieCatalogApplication   : Started MovieCatalogApplication in 16.179 seconds (JVM running for 18.576)
2020-06-13 19:15:35.235  INFO 27880 --- [restartedMain] k.moviecatalog.MovieCatalogApplication   : moviecatalog is running :)
2020-06-13 19:15:38.947  INFO 27880 --- [MessageBroker-1] k.moviecatalog.service.ScheduledService  : [Scheduled task] Updating all movies average rating in DB.
2020-06-13 19:15:38.950  INFO 27880 --- [MessageBroker-1] k.m.service.rabbitmq.RabbitMqSender      : Sending recalculate all movies average rating request to rabbitMQ rating-queue.
2020-06-13 19:15:38.968  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.m.service.rabbitmq.RabbitMqReceiver    : Received message from RabbitMQ to get Ratings for all movies.
2020-06-13 19:15:38.969  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.moviecatalog.service.DbMovieService    : get all from DB
2020-06-13 19:15:39.312  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.m.service.rabbitmq.RabbitMqReceiver    : Updating movie with id 1 average rating.
2020-06-13 19:15:39.596  INFO 27880 --- [hystrix-ExternalRatingService-1] k.m.service.ExternalRatingService        : Getting average rating from Rating service.
2020-06-13 19:15:39.656  INFO 27880 --- [http-nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-13 19:15:39.657  INFO 27880 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-06-13 19:15:39.670  INFO 27880 --- [http-nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-06-13 19:15:39.761  INFO 27880 --- [hystrix-ExternalRatingService-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: rating-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-13 19:15:39.807  INFO 27880 --- [hystrix-ExternalRatingService-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-rating-service
2020-06-13 19:15:39.808  INFO 27880 --- [hystrix-ExternalRatingService-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: rating-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rating-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-06-13 19:15:39.814  INFO 27880 --- [hystrix-ExternalRatingService-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2020-06-13 19:15:39.820  INFO 27880 --- [hystrix-ExternalRatingService-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client rating-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rating-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4db6514c
2020-06-13 19:15:39.855  WARN 27880 --- [hystrix-ExternalRatingService-1] k.m.service.ExternalRatingService        : Rating Service is down - return the stored value in DB for average Rating.
2020-06-13 19:15:39.930  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.m.service.rabbitmq.RabbitMqReceiver    : Updating movie with id 2 average rating.
2020-06-13 19:15:39.942  INFO 27880 --- [hystrix-ExternalRatingService-2] k.m.service.ExternalRatingService        : Getting average rating from Rating service.
2020-06-13 19:15:39.943  WARN 27880 --- [hystrix-ExternalRatingService-2] k.m.service.ExternalRatingService        : Rating Service is down - return the stored value in DB for average Rating.
2020-06-13 19:15:40.206  WARN 27880 --- [http-nio-8081-exec-1] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [502] milliseconds.
2020-06-13 19:15:43.460  INFO 27880 --- [http-nio-8081-exec-5] k.m.controller.UserController            : rendering user home page
2020-06-13 19:15:43.460  INFO 27880 --- [http-nio-8081-exec-5] k.moviecatalog.service.CacheService      : get movies from redis cache with key 'rating'
2020-06-13 19:15:43.460  INFO 27880 --- [http-nio-8081-exec-5] k.moviecatalog.service.CacheService      : getting data from cache with key 'rating'
2020-06-13 19:15:43.463  INFO 27880 --- [http-nio-8081-exec-5] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'rating'
2020-06-13 19:15:43.557  INFO 27880 --- [http-nio-8081-exec-5] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-06-13 19:15:43.559  INFO 27880 --- [http-nio-8081-exec-5] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-06-13 19:15:43.957  INFO 27880 --- [MessageBroker-2] k.moviecatalog.service.ScheduledService  : [Scheduled task] Refreshing all movies stored in REDIS and then inform FE via stomp.
2020-06-13 19:15:43.957  INFO 27880 --- [MessageBroker-2] k.m.service.rabbitmq.RabbitMqSender      : Sending recalculate all tables request to rabbitMQ recalculate-queue.
2020-06-13 19:15:43.961  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] k.m.service.rabbitmq.RabbitMqReceiver    : Received message from RabbitMQ to recalculate all tables.
2020-06-13 19:15:43.963  INFO 27880 --- [MovieThread-1] k.moviecatalog.service.DbMovieService    : get all from DB
2020-06-13 19:15:43.963  INFO 27880 --- [MovieThread-3] k.moviecatalog.service.DbMovieService    : get top N from DB
2020-06-13 19:15:43.963  INFO 27880 --- [MovieThread-2] k.moviecatalog.service.DbMovieService    : get latest N from DB
2020-06-13 19:15:43.963  INFO 27880 --- [MovieThread-2] k.m.s.r.RuntimeConfigurationService      : Getting options of the Runtime Configuration 'visible_movies'.
2020-06-13 19:15:43.984  INFO 27880 --- [MovieThread-2] k.moviecatalog.service.DbMovieService    : max visible movies limit is 5
2020-06-13 19:15:43.993  INFO 27880 --- [MovieThread-1] k.m.service.redis.RedisService           : Adding movies '[{"id":1,"name":"adult movie","description":"","averageRating":0.0,"forAdults":true},{"id":2,"name":"normal movie","description":"","averageRating":0.0,"forAdults":false}]' to the redis cache with key: 'allMovies'
2020-06-13 19:15:44.039  INFO 27880 --- [MovieThread-2] k.m.service.redis.RedisService           : Adding movies '[{"id":2,"name":"normal movie","description":"","averageRating":0.0,"forAdults":false},{"id":1,"name":"adult movie","description":"","averageRating":0.0,"forAdults":true}]' to the redis cache with key: 'latestMovies'
2020-06-13 19:15:44.175  INFO 27880 --- [http-nio-8081-exec-5] k.moviecatalog.service.CacheService      : get movies from redis cache with key 'latestMovies'
2020-06-13 19:15:44.175  INFO 27880 --- [http-nio-8081-exec-5] k.moviecatalog.service.CacheService      : getting data from cache with key 'latestMovies'
2020-06-13 19:15:44.176  INFO 27880 --- [http-nio-8081-exec-5] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'latestMovies'
2020-06-13 19:15:44.193  INFO 27880 --- [hystrix-ExternalShopService-1] k.m.service.ExternalShopService          : trying to get user orders from microservice.
2020-06-13 19:15:44.239  INFO 27880 --- [hystrix-ExternalShopService-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: shop-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-13 19:15:44.241  INFO 27880 --- [hystrix-ExternalShopService-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-shop-service
2020-06-13 19:15:44.241  INFO 27880 --- [hystrix-ExternalShopService-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: shop-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=shop-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-06-13 19:15:44.243  INFO 27880 --- [hystrix-ExternalShopService-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2020-06-13 19:15:44.283  INFO 27880 --- [hystrix-ExternalShopService-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: shop-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-13 19:15:44.285  INFO 27880 --- [hystrix-ExternalShopService-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client shop-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=shop-service,current list of Servers=[192.168.0.105:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.0.105:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 01:00:00 CET 1970;	First connection made: Thu Jan 01 01:00:00 CET 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1462a559
2020-06-13 19:15:44.605  INFO 27880 --- [hystrix-ExternalCommentService-1] k.m.service.ExternalCommentService       : Getting latest comments from Comment service.
2020-06-13 19:15:44.641  INFO 27880 --- [hystrix-ExternalCommentService-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: comment-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-13 19:15:44.642  INFO 27880 --- [hystrix-ExternalCommentService-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-comment-service
2020-06-13 19:15:44.642  INFO 27880 --- [hystrix-ExternalCommentService-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: comment-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=comment-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-06-13 19:15:44.643  INFO 27880 --- [hystrix-ExternalCommentService-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2020-06-13 19:15:44.644  INFO 27880 --- [hystrix-ExternalCommentService-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client comment-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=comment-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@101242d7
2020-06-13 19:15:44.649  WARN 27880 --- [hystrix-ExternalCommentService-1] k.m.service.ExternalCommentService       : CommentService is down, comments from cache are returned.
2020-06-13 19:15:44.649  INFO 27880 --- [hystrix-ExternalCommentService-1] k.moviecatalog.service.CacheService      : getting data from cache with key 'latestComments'
2020-06-13 19:15:44.649  INFO 27880 --- [hystrix-ExternalCommentService-1] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'latestComments'
2020-06-13 19:15:45.258  INFO 27880 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: shop-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-13 19:15:46.981  INFO 27880 --- [hystrix-ExternalCommentService-2] k.m.service.ExternalCommentService       : Getting comments from Comment service.
2020-06-13 19:15:46.982  WARN 27880 --- [hystrix-ExternalCommentService-2] k.m.service.ExternalCommentService       : Comment service is down - return comments from cache.
2020-06-13 19:15:46.982  INFO 27880 --- [hystrix-ExternalCommentService-2] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieComments-2'
2020-06-13 19:15:46.982  INFO 27880 --- [hystrix-ExternalCommentService-2] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieComments-2'
2020-06-13 19:15:46.991  INFO 27880 --- [hystrix-ExternalRatingService-3] k.m.service.ExternalRatingService        : Getting ratings from Rating service.
2020-06-13 19:15:46.997  INFO 27880 --- [hystrix-ExternalRatingService-3] k.m.service.ExternalRatingService        : Rating Service is down - return rating List from cache.
2020-06-13 19:15:46.997  INFO 27880 --- [hystrix-ExternalRatingService-3] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieRatings-2'
2020-06-13 19:15:46.997  INFO 27880 --- [hystrix-ExternalRatingService-3] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieRatings-2'
2020-06-13 19:15:47.048  INFO 27880 --- [hystrix-ExternalShopService-3] k.m.service.ExternalShopService          : get count of solds for movie with id '2'.
2020-06-13 19:15:47.068  INFO 27880 --- [hystrix-ExternalShopService-3] k.moviecatalog.service.CacheService      : saving data to cache with key 'movieSoldsCount-2'
2020-06-13 19:15:47.069  INFO 27880 --- [hystrix-ExternalShopService-3] k.m.service.redis.RedisService           : Adding data '0' to the redis cache with key: 'movieSoldsCount-2'
2020-06-13 19:15:47.072  INFO 27880 --- [http-nio-8081-exec-5] k.m.service.MovieDetailService           : Movie data are prepared.
2020-06-13 19:15:49.757  INFO 27880 --- [MovieThread-3] k.m.s.r.RuntimeConfigurationService      : Getting options of the Runtime Configuration 'visible_movies'.
2020-06-13 19:15:49.794  INFO 27880 --- [MovieThread-3] k.moviecatalog.service.DbMovieService    : max visible movies limit is 5
2020-06-13 19:15:50.777  INFO 27880 --- [MovieThread-3] k.m.service.redis.RedisService           : Adding movies '[{"id":1,"name":"adult movie","description":"","averageRating":0.0,"forAdults":true},{"id":2,"name":"normal movie","description":"","averageRating":0.0,"forAdults":false}]' to the redis cache with key: 'rating'
2020-06-13 19:15:50.783  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] k.moviecatalog.service.STOMPService      : Sending STOMP to refresh all tables
2020-06-13 19:15:50.815  INFO 27880 --- [http-nio-8081-exec-9] k.m.controller.UserController            : rendering user home page
2020-06-13 19:15:50.815  INFO 27880 --- [http-nio-8081-exec-9] k.moviecatalog.service.CacheService      : get movies from redis cache with key 'rating'
2020-06-13 19:15:50.815  INFO 27880 --- [http-nio-8081-exec-9] k.moviecatalog.service.CacheService      : getting data from cache with key 'rating'
2020-06-13 19:15:50.815  INFO 27880 --- [http-nio-8081-exec-9] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'rating'
2020-06-13 19:15:50.825  INFO 27880 --- [http-nio-8081-exec-9] k.moviecatalog.service.CacheService      : get movies from redis cache with key 'latestMovies'
2020-06-13 19:15:50.825  INFO 27880 --- [http-nio-8081-exec-9] k.moviecatalog.service.CacheService      : getting data from cache with key 'latestMovies'
2020-06-13 19:15:50.825  INFO 27880 --- [http-nio-8081-exec-9] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'latestMovies'
2020-06-13 19:15:50.846  INFO 27880 --- [hystrix-ExternalShopService-4] k.m.service.ExternalShopService          : trying to get user orders from microservice.
2020-06-13 19:15:50.875  INFO 27880 --- [hystrix-ExternalCommentService-3] k.m.service.ExternalCommentService       : Getting latest comments from Comment service.
2020-06-13 19:15:50.879  WARN 27880 --- [hystrix-ExternalCommentService-3] k.m.service.ExternalCommentService       : CommentService is down, comments from cache are returned.
2020-06-13 19:15:50.879  INFO 27880 --- [hystrix-ExternalCommentService-3] k.moviecatalog.service.CacheService      : getting data from cache with key 'latestComments'
2020-06-13 19:15:50.879  INFO 27880 --- [hystrix-ExternalCommentService-3] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'latestComments'
2020-06-13 19:16:09.888  INFO 27880 --- [hystrix-ExternalCommentService-4] k.m.service.ExternalCommentService       : Getting comments from Comment service.
2020-06-13 19:16:09.895  WARN 27880 --- [hystrix-ExternalCommentService-4] k.m.service.ExternalCommentService       : Comment service is down - return comments from cache.
2020-06-13 19:16:09.895  INFO 27880 --- [hystrix-ExternalCommentService-4] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieComments-2'
2020-06-13 19:16:09.959  INFO 27880 --- [hystrix-ExternalCommentService-4] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieComments-2'
2020-06-13 19:16:09.964  INFO 27880 --- [hystrix-ExternalRatingService-4] k.m.service.ExternalRatingService        : Getting ratings from Rating service.
2020-06-13 19:16:09.965  INFO 27880 --- [hystrix-ExternalRatingService-4] k.m.service.ExternalRatingService        : Rating Service is down - return rating List from cache.
2020-06-13 19:16:09.965  INFO 27880 --- [hystrix-ExternalRatingService-4] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieRatings-2'
2020-06-13 19:16:09.965  INFO 27880 --- [hystrix-ExternalRatingService-4] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieRatings-2'
2020-06-13 19:16:09.990  INFO 27880 --- [hystrix-ExternalShopService-6] k.m.service.ExternalShopService          : get count of solds for movie with id '2'.
2020-06-13 19:16:09.995  INFO 27880 --- [hystrix-ExternalShopService-6] k.moviecatalog.service.CacheService      : saving data to cache with key 'movieSoldsCount-2'
2020-06-13 19:16:09.996  INFO 27880 --- [hystrix-ExternalShopService-6] k.m.service.redis.RedisService           : Adding data '0' to the redis cache with key: 'movieSoldsCount-2'
2020-06-13 19:16:09.999  INFO 27880 --- [http-nio-8081-exec-7] k.m.service.MovieDetailService           : Movie data are prepared.
2020-06-13 19:16:23.498  INFO 27880 --- [hystrix-ExternalShopService-7] k.m.service.ExternalShopService          : request to buy movie in shop service
2020-06-13 19:16:26.155  INFO 27880 --- [hystrix-ExternalCommentService-5] k.m.service.ExternalCommentService       : Getting comments from Comment service.
2020-06-13 19:16:26.156  WARN 27880 --- [hystrix-ExternalCommentService-5] k.m.service.ExternalCommentService       : Comment service is down - return comments from cache.
2020-06-13 19:16:26.156  INFO 27880 --- [hystrix-ExternalCommentService-5] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieComments-2'
2020-06-13 19:16:26.156  INFO 27880 --- [hystrix-ExternalCommentService-5] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieComments-2'
2020-06-13 19:16:26.160  INFO 27880 --- [hystrix-ExternalRatingService-5] k.m.service.ExternalRatingService        : Getting ratings from Rating service.
2020-06-13 19:16:26.162  INFO 27880 --- [hystrix-ExternalRatingService-5] k.m.service.ExternalRatingService        : Rating Service is down - return rating List from cache.
2020-06-13 19:16:26.162  INFO 27880 --- [hystrix-ExternalRatingService-5] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieRatings-2'
2020-06-13 19:16:26.162  INFO 27880 --- [hystrix-ExternalRatingService-5] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieRatings-2'
2020-06-13 19:16:26.175  INFO 27880 --- [hystrix-ExternalShopService-9] k.m.service.ExternalShopService          : get count of solds for movie with id '2'.
2020-06-13 19:16:26.181  INFO 27880 --- [hystrix-ExternalShopService-9] k.moviecatalog.service.CacheService      : saving data to cache with key 'movieSoldsCount-2'
2020-06-13 19:16:26.181  INFO 27880 --- [hystrix-ExternalShopService-9] k.m.service.redis.RedisService           : Adding data '0' to the redis cache with key: 'movieSoldsCount-2'
2020-06-13 19:16:26.185  INFO 27880 --- [http-nio-8081-exec-7] k.m.service.MovieDetailService           : Movie data are prepared.
2020-06-13 19:16:27.944  INFO 27880 --- [MessageBroker-10] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 24, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 12, active threads = 1, queued tasks = 4, completed tasks = 11]
2020-06-13 19:16:33.268  INFO 27880 --- [hystrix-ExternalCommentService-6] k.m.service.ExternalCommentService       : Getting comments from Comment service.
2020-06-13 19:16:33.279  WARN 27880 --- [hystrix-ExternalCommentService-6] k.m.service.ExternalCommentService       : Comment service is down - return comments from cache.
2020-06-13 19:16:33.279  INFO 27880 --- [hystrix-ExternalCommentService-6] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieComments-2'
2020-06-13 19:16:33.279  INFO 27880 --- [hystrix-ExternalCommentService-6] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieComments-2'
2020-06-13 19:16:33.284  INFO 27880 --- [hystrix-ExternalRatingService-6] k.m.service.ExternalRatingService        : Getting ratings from Rating service.
2020-06-13 19:16:33.287  INFO 27880 --- [hystrix-ExternalRatingService-6] k.m.service.ExternalRatingService        : Rating Service is down - return rating List from cache.
2020-06-13 19:16:33.288  INFO 27880 --- [hystrix-ExternalRatingService-6] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieRatings-2'
2020-06-13 19:16:33.288  INFO 27880 --- [hystrix-ExternalRatingService-6] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieRatings-2'
2020-06-13 19:16:33.314  INFO 27880 --- [hystrix-ExternalShopService-10] k.m.service.ExternalShopService          : get count of solds for movie with id '2'.
2020-06-13 19:16:33.319  INFO 27880 --- [hystrix-ExternalShopService-10] k.moviecatalog.service.CacheService      : saving data to cache with key 'movieSoldsCount-2'
2020-06-13 19:16:33.319  INFO 27880 --- [hystrix-ExternalShopService-10] k.m.service.redis.RedisService           : Adding data '1' to the redis cache with key: 'movieSoldsCount-2'
2020-06-13 19:16:33.323  INFO 27880 --- [http-nio-8081-exec-2] k.m.service.MovieDetailService           : Movie data are prepared.
2020-06-13 19:16:35.205  INFO 27880 --- [http-nio-8081-exec-2] k.m.service.ExternalShopService          : User has already bought this movie.
2020-06-13 19:16:38.965  INFO 27880 --- [MessageBroker-5] k.moviecatalog.service.ScheduledService  : [Scheduled task] Updating all movies average rating in DB.
2020-06-13 19:16:38.965  INFO 27880 --- [MessageBroker-5] k.m.service.rabbitmq.RabbitMqSender      : Sending recalculate all movies average rating request to rabbitMQ rating-queue.
2020-06-13 19:16:38.968  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.m.service.rabbitmq.RabbitMqReceiver    : Received message from RabbitMQ to get Ratings for all movies.
2020-06-13 19:16:38.968  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.moviecatalog.service.DbMovieService    : get all from DB
2020-06-13 19:16:38.979  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.m.service.rabbitmq.RabbitMqReceiver    : Updating movie with id 1 average rating.
2020-06-13 19:16:38.991  INFO 27880 --- [hystrix-ExternalRatingService-7] k.m.service.ExternalRatingService        : Getting average rating from Rating service.
2020-06-13 19:16:38.992  WARN 27880 --- [hystrix-ExternalRatingService-7] k.m.service.ExternalRatingService        : Rating Service is down - return the stored value in DB for average Rating.
2020-06-13 19:16:39.013  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.m.service.rabbitmq.RabbitMqReceiver    : Updating movie with id 2 average rating.
2020-06-13 19:16:39.027  INFO 27880 --- [hystrix-ExternalRatingService-8] k.m.service.ExternalRatingService        : Getting average rating from Rating service.
2020-06-13 19:16:39.028  WARN 27880 --- [hystrix-ExternalRatingService-8] k.m.service.ExternalRatingService        : Rating Service is down - return the stored value in DB for average Rating.
2020-06-13 19:16:43.964  INFO 27880 --- [MessageBroker-4] k.moviecatalog.service.ScheduledService  : [Scheduled task] Refreshing all movies stored in REDIS and then inform FE via stomp.
2020-06-13 19:16:43.965  INFO 27880 --- [MessageBroker-4] k.m.service.rabbitmq.RabbitMqSender      : Sending recalculate all tables request to rabbitMQ recalculate-queue.
2020-06-13 19:16:43.968  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] k.m.service.rabbitmq.RabbitMqReceiver    : Received message from RabbitMQ to recalculate all tables.
2020-06-13 19:16:43.969  INFO 27880 --- [MovieThread-2] k.moviecatalog.service.DbMovieService    : get all from DB
2020-06-13 19:16:43.969  INFO 27880 --- [MovieThread-3] k.moviecatalog.service.DbMovieService    : get top N from DB
2020-06-13 19:16:43.969  INFO 27880 --- [MovieThread-1] k.moviecatalog.service.DbMovieService    : get latest N from DB
2020-06-13 19:16:43.969  INFO 27880 --- [MovieThread-1] k.m.s.r.RuntimeConfigurationService      : Getting options of the Runtime Configuration 'visible_movies'.
2020-06-13 19:16:43.974  INFO 27880 --- [MovieThread-1] k.moviecatalog.service.DbMovieService    : max visible movies limit is 5
2020-06-13 19:16:43.978  INFO 27880 --- [MovieThread-1] k.m.service.redis.RedisService           : Adding movies '[{"id":2,"name":"normal movie","description":"","averageRating":0.0,"forAdults":false},{"id":1,"name":"adult movie","description":"","averageRating":0.0,"forAdults":true}]' to the redis cache with key: 'latestMovies'
2020-06-13 19:16:43.984  INFO 27880 --- [MovieThread-2] k.m.service.redis.RedisService           : Adding movies '[{"id":1,"name":"adult movie","description":"","averageRating":0.0,"forAdults":true},{"id":2,"name":"normal movie","description":"","averageRating":0.0,"forAdults":false}]' to the redis cache with key: 'allMovies'
2020-06-13 19:16:48.974  INFO 27880 --- [MovieThread-3] k.m.s.r.RuntimeConfigurationService      : Getting options of the Runtime Configuration 'visible_movies'.
2020-06-13 19:16:48.980  INFO 27880 --- [MovieThread-3] k.moviecatalog.service.DbMovieService    : max visible movies limit is 5
2020-06-13 19:16:48.985  INFO 27880 --- [MovieThread-3] k.m.service.redis.RedisService           : Adding movies '[{"id":1,"name":"adult movie","description":"","averageRating":0.0,"forAdults":true},{"id":2,"name":"normal movie","description":"","averageRating":0.0,"forAdults":false}]' to the redis cache with key: 'rating'
2020-06-13 19:16:48.988  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] k.moviecatalog.service.STOMPService      : Sending STOMP to refresh all tables
2020-06-13 19:16:49.822  INFO 27880 --- [hystrix-ExternalCommentService-7] k.m.service.ExternalCommentService       : Getting comments from Comment service.
2020-06-13 19:16:49.823  WARN 27880 --- [hystrix-ExternalCommentService-7] k.m.service.ExternalCommentService       : Comment service is down - return comments from cache.
2020-06-13 19:16:49.823  INFO 27880 --- [hystrix-ExternalCommentService-7] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieComments-2'
2020-06-13 19:16:49.823  INFO 27880 --- [hystrix-ExternalCommentService-7] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieComments-2'
2020-06-13 19:16:49.828  INFO 27880 --- [hystrix-ExternalRatingService-9] k.m.service.ExternalRatingService        : Getting ratings from Rating service.
2020-06-13 19:16:49.829  INFO 27880 --- [hystrix-ExternalRatingService-9] k.m.service.ExternalRatingService        : Rating Service is down - return rating List from cache.
2020-06-13 19:16:49.830  INFO 27880 --- [hystrix-ExternalRatingService-9] k.moviecatalog.service.CacheService      : getting data from cache with key 'movieRatings-2'
2020-06-13 19:16:49.830  INFO 27880 --- [hystrix-ExternalRatingService-9] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'movieRatings-2'
2020-06-13 19:16:49.856  INFO 27880 --- [hystrix-ExternalShopService-10] k.m.service.ExternalShopService          : get count of solds for movie with id '2'.
2020-06-13 19:16:49.861  INFO 27880 --- [hystrix-ExternalShopService-10] k.moviecatalog.service.CacheService      : saving data to cache with key 'movieSoldsCount-2'
2020-06-13 19:16:49.861  INFO 27880 --- [hystrix-ExternalShopService-10] k.m.service.redis.RedisService           : Adding data '1' to the redis cache with key: 'movieSoldsCount-2'
2020-06-13 19:16:49.864  INFO 27880 --- [http-nio-8081-exec-10] k.m.service.MovieDetailService           : Movie data are prepared.
2020-06-13 19:16:51.719  INFO 27880 --- [http-nio-8081-exec-10] k.m.service.ExternalShopService          : User has already bought this movie.
2020-06-13 19:16:59.591  WARN 27880 --- [http-nio-8081-exec-9] o.s.w.s.s.t.h.DefaultSockJsService       : Invalid SockJS path '/all' - required to have 3 path segments
2020-06-13 19:17:00.983  WARN 27880 --- [http-nio-8081-exec-6] o.s.w.s.s.t.h.DefaultSockJsService       : Invalid SockJS path '/all' - required to have 3 path segments
2020-06-13 19:17:03.756  WARN 27880 --- [http-nio-8081-exec-2] o.s.w.s.s.t.h.DefaultSockJsService       : Invalid SockJS path '/allMovies' - required to have 3 path segments
2020-06-13 19:17:06.989  INFO 27880 --- [http-nio-8081-exec-10] k.m.controller.UserController            : rendering all movies page
2020-06-13 19:17:06.989  INFO 27880 --- [http-nio-8081-exec-10] k.moviecatalog.service.CacheService      : get movies from redis cache with key 'allMovies'
2020-06-13 19:17:06.989  INFO 27880 --- [http-nio-8081-exec-10] k.moviecatalog.service.CacheService      : getting data from cache with key 'allMovies'
2020-06-13 19:17:06.989  INFO 27880 --- [http-nio-8081-exec-10] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'allMovies'
2020-06-13 19:17:38.972  INFO 27880 --- [MessageBroker-1] k.moviecatalog.service.ScheduledService  : [Scheduled task] Updating all movies average rating in DB.
2020-06-13 19:17:38.972  INFO 27880 --- [MessageBroker-1] k.m.service.rabbitmq.RabbitMqSender      : Sending recalculate all movies average rating request to rabbitMQ rating-queue.
2020-06-13 19:17:38.976  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.m.service.rabbitmq.RabbitMqReceiver    : Received message from RabbitMQ to get Ratings for all movies.
2020-06-13 19:17:38.976  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.moviecatalog.service.DbMovieService    : get all from DB
2020-06-13 19:17:38.988  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.m.service.rabbitmq.RabbitMqReceiver    : Updating movie with id 1 average rating.
2020-06-13 19:17:38.998  INFO 27880 --- [hystrix-ExternalRatingService-10] k.m.service.ExternalRatingService        : Getting average rating from Rating service.
2020-06-13 19:17:38.999  WARN 27880 --- [hystrix-ExternalRatingService-10] k.m.service.ExternalRatingService        : Rating Service is down - return the stored value in DB for average Rating.
2020-06-13 19:17:39.015  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] k.m.service.rabbitmq.RabbitMqReceiver    : Updating movie with id 2 average rating.
2020-06-13 19:17:39.026  INFO 27880 --- [hystrix-ExternalRatingService-10] k.m.service.ExternalRatingService        : Getting average rating from Rating service.
2020-06-13 19:17:39.027  WARN 27880 --- [hystrix-ExternalRatingService-10] k.m.service.ExternalRatingService        : Rating Service is down - return the stored value in DB for average Rating.
2020-06-13 19:17:43.968  INFO 27880 --- [MessageBroker-10] k.moviecatalog.service.ScheduledService  : [Scheduled task] Refreshing all movies stored in REDIS and then inform FE via stomp.
2020-06-13 19:17:43.968  INFO 27880 --- [MessageBroker-10] k.m.service.rabbitmq.RabbitMqSender      : Sending recalculate all tables request to rabbitMQ recalculate-queue.
2020-06-13 19:17:43.972  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] k.m.service.rabbitmq.RabbitMqReceiver    : Received message from RabbitMQ to recalculate all tables.
2020-06-13 19:17:43.972  INFO 27880 --- [MovieThread-2] k.moviecatalog.service.DbMovieService    : get all from DB
2020-06-13 19:17:43.972  INFO 27880 --- [MovieThread-3] k.moviecatalog.service.DbMovieService    : get top N from DB
2020-06-13 19:17:43.972  INFO 27880 --- [MovieThread-1] k.moviecatalog.service.DbMovieService    : get latest N from DB
2020-06-13 19:17:43.972  INFO 27880 --- [MovieThread-1] k.m.s.r.RuntimeConfigurationService      : Getting options of the Runtime Configuration 'visible_movies'.
2020-06-13 19:17:43.977  INFO 27880 --- [MovieThread-1] k.moviecatalog.service.DbMovieService    : max visible movies limit is 5
2020-06-13 19:17:43.981  INFO 27880 --- [MovieThread-1] k.m.service.redis.RedisService           : Adding movies '[{"id":2,"name":"normal movie","description":"","averageRating":0.0,"forAdults":false},{"id":1,"name":"adult movie","description":"","averageRating":0.0,"forAdults":true}]' to the redis cache with key: 'latestMovies'
2020-06-13 19:17:43.987  INFO 27880 --- [MovieThread-2] k.m.service.redis.RedisService           : Adding movies '[{"id":1,"name":"adult movie","description":"","averageRating":0.0,"forAdults":true},{"id":2,"name":"normal movie","description":"","averageRating":0.0,"forAdults":false}]' to the redis cache with key: 'allMovies'
2020-06-13 19:17:48.985  INFO 27880 --- [MovieThread-3] k.m.s.r.RuntimeConfigurationService      : Getting options of the Runtime Configuration 'visible_movies'.
2020-06-13 19:17:48.991  INFO 27880 --- [MovieThread-3] k.moviecatalog.service.DbMovieService    : max visible movies limit is 5
2020-06-13 19:17:48.995  INFO 27880 --- [MovieThread-3] k.m.service.redis.RedisService           : Adding movies '[{"id":1,"name":"adult movie","description":"","averageRating":0.0,"forAdults":true},{"id":2,"name":"normal movie","description":"","averageRating":0.0,"forAdults":false}]' to the redis cache with key: 'rating'
2020-06-13 19:17:48.997  INFO 27880 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] k.moviecatalog.service.STOMPService      : Sending STOMP to refresh all tables
2020-06-13 19:17:49.006  INFO 27880 --- [http-nio-8081-exec-3] k.m.controller.UserController            : rendering all movies page
2020-06-13 19:17:49.006  INFO 27880 --- [http-nio-8081-exec-3] k.moviecatalog.service.CacheService      : get movies from redis cache with key 'allMovies'
2020-06-13 19:17:49.006  INFO 27880 --- [http-nio-8081-exec-3] k.moviecatalog.service.CacheService      : getting data from cache with key 'allMovies'
2020-06-13 19:17:49.006  INFO 27880 --- [http-nio-8081-exec-3] k.m.service.redis.RedisService           : Getting data from redis cache with key: 'allMovies'
